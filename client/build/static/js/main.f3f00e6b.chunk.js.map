{"version":3,"sources":["components/Create.jsx","components/List.jsx","components/Display.jsx","components/Edit.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Create","addPet","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","to","map","error","idx","style","color","key","onSubmit","e","preventDefault","newPet","axios","post","then","res","console","log","data","pet","navigate","catch","err","response","newErrors","Object","keys","push","message","onChange","target","value","List","list","className","_id","Display","id","adoptHandle","updatePet","setPet","likes","setLikes","disable","setDisable","useEffect","get","onClick","disabled","put","Edit","errorRes","Main","setList","pets","addedPet","path","delete","newList","filter","adoptPet","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3f00e6b.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport {navigate, Link} from '@reach/router'\n\nconst Create = ({addPet}) => {\n\n    const [name, setName] = useState(\"\")\n    const [type, setType] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [skill1, setSkill1] = useState(\"\")\n    const [skill2, setSkill2] = useState(\"\")\n    const [skill3, setSkill3] = useState(\"\")\n\n    const [errors, setErrors] = useState([])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const newPet = {\n            name: name,\n            type: type,\n            description: description,\n            skill1: skill1,\n            skill2: skill2,\n            skill3: skill3,\n        }\n        axios.post(\"http://localhost:8003/pets/new\", newPet)\n            .then(res => {\n                console.log(res);\n                addPet(res.data.pet)\n                navigate(\"/\")\n            })\n            .catch(err => {\n                console.log(err.response.data.errors);\n                const keys = Object.keys(err.response.data.errors);\n                const newErrors = []\n                for(let error of keys){\n                    newErrors.push(err.response.data.errors[error].message)\n                }\n                setErrors(newErrors)\n            });\n    }\n\n    return(\n        <div>\n            <h1>Pet Shelter</h1>\n            <Link to=\"/\">back to home</Link>\n            <h3>Know a pet needing a home?</h3>\n            <br></br>\n            {\n                errors.map((error, idx) =>\n                    <p style={{color: \"red\"}} key={idx}>{error}</p>\n                )\n            }\n            <form onSubmit={submitHandler}>\n                <label>Pet Name: </label>\n                <input type=\"text\" onChange={(e) => setName(e.target.value)}/>\n                <label>Pet Type: </label>\n                <input type=\"text\" onChange={(e) => setType(e.target.value)}/>\n                <label>Pet Description: </label>\n                <input type=\"text\" onChange={(e) => setDescription(e.target.value)}/>\n                <br></br>\n                <p>Skills (optional): </p>\n                <label>Skill 1: </label>\n                <input type=\"text\" onChange={(e) => setSkill1(e.target.value)}/>\n                <label>Skill 2: </label>\n                <input type=\"text\" onChange={(e) => setSkill2(e.target.value)}/>\n                <label>Skill 3: </label>\n                <input type=\"text\" onChange={(e) => setSkill3(e.target.value)}/>\n                <br></br>\n                <br></br>\n                <input type=\"submit\" value=\"Add Pet\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Create;","import React from 'react'\nimport {Link} from '@reach/router'\nimport \"./style.css\"\n\nconst List = ({list}) => {\n\n\n\n    return(\n        <div>\n            <h1>Pet Shelter</h1>\n            <Link to=\"/pets/new\">add a pet to the shelter</Link>\n            <h3>These pets are looking for a good home</h3>\n            <hr></hr>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        list.map((pet, idx)=> \n                            <tr key={idx}>\n                                <td>{pet.name}</td>\n                                <td>{pet.type}</td>\n                                <td>\n                                    <Link to={`/pets/${pet._id}`}>Details</Link>\n                                    <br></br>\n                                    <Link to={`/pets/${pet._id}/edit`}>Edit</Link>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default List","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {Link} from '@reach/router'\nimport './style.css'\n\nconst Display = ({id, adoptHandle, updatePet}) => {\n\n    const [pet, setPet] = useState(\"\")\n    const [likes, setLikes] = useState(0)\n    const [disable, setDisable] = useState(false)\n\n    useEffect(() => {\n        axios.get(`http://localhost:8003/pets/${id}`)\n            .then((res) => {\n                console.log(res);\n                setPet(res.data.pet)\n                setLikes(res.data.pet.likes)\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n    }, []);\n\n    const likeHandler = (e) => {\n        if(disable === false){\n            setDisable(true)\n        }\n        axios.put(`http://localhost:8003/pets/update/${id}`, {likes: likes + 1})\n            .then(res => {\n                console.log(res)\n                updatePet(res.data.pet)\n            })\n            .catch(err => {\n                console.log(err)\n            });\n        setLikes(likes + 1)\n    }\n    \n\n    return(\n        <div>\n            <h1>Pet Shelter</h1>\n            <Link to=\"/\">back to home</Link>\n            <h3>Details about: {pet.name}</h3>\n            <input type=\"button\" value={`Adopt ${pet.name}`} onClick={(e) => {adoptHandle(id)}} />\n            <br></br>\n            <div className=\"border\">\n                <p>Pet type: {pet.type}</p>\n                <p>Description: {pet.description}</p>\n                <p>Skills: {pet.skill1}</p>\n                <p>{pet.skill2}</p>\n                <p>{pet.skill3}</p>\n                <br></br>\n                <input type=\"button\" value={`Like ${pet.name}`} disabled={disable} onClick={likeHandler} />\n                <p>{pet.likes} like(s)</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Display;","import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport {navigate, Link} from '@reach/router'\n\nconst Edit = ({id, updatePet, list}) => {\n\n    const [name, setName] = useState(\"\")\n    const [type, setType] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [skill1, setSkill1] = useState(\"\")\n    const [skill2, setSkill2] = useState(\"\")\n    const [skill3, setSkill3] = useState(\"\")\n    const [likes, setLikes] = useState()\n\n    const [errors, setErrors] = useState([])\n\n\n    useEffect(() => {\n        axios.get(`http://localhost:8003/pets/${id}`)\n            .then(res => {\n                console.log(res);\n                setName(res.data.pet.name);\n                setType(res.data.pet.type);\n                setDescription(res.data.pet.description);\n                setSkill1(res.data.pet.skill1);\n                setSkill2(res.data.pet.skill2);\n                setSkill3(res.data.pet.skill3);\n                setLikes(res.data.pet.likes)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    const editHandle = (e) => {\n        e.preventDefault();\n        const pet = {\n            name: name,\n            type: type,\n            description: description,\n            skill1: skill1,\n            skill2: skill2,\n            skill3: skill3,\n            likes: likes\n        }\n        axios.put(`http://localhost:8003/pets/update/${id}`, pet)\n            .then(res => {\n                console.log(res)\n                updatePet(res.data.pet)\n                navigate(\"/\")\n            })\n            .catch(err => {\n                console.log(err)\n                console.log(err.response.data.errors);\n                const errorRes = err.response.data.errors\n                const keys = Object.keys(errorRes);\n                const newErrors = []\n                for(let error of keys){\n                    newErrors.push(errorRes[error].message)\n                }\n                setErrors(newErrors)\n            })\n    }\n\n    return(\n        <div>\n            <h1>Pet Shelter</h1>\n            <Link to=\"/\">back to home</Link>\n            <h3>Edit {name}</h3>\n            <br></br>\n            {\n                errors.map((error, idx) =>\n                    <p style={{color: \"red\"}} key={idx}>{error}</p>\n                )\n            }\n            <form onSubmit={editHandle}>\n                <label>Pet Name: </label>\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n                <label>Pet Type: </label>\n                <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} />\n                <label>Pet Description: </label>\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n                <br></br>\n                <p>Skills (optional): </p>\n                <label>Skill 1: </label>\n                <input type=\"text\" value={skill1} onChange={(e) => setSkill1(e.target.value)} />\n                <label>Skill 2: </label>\n                <input type=\"text\" value={skill2} onChange={(e) => setSkill2(e.target.value)} />\n                <label>Skill 3: </label>\n                <input type=\"text\" value={skill3} onChange={(e) => setSkill3(e.target.value)} />\n                <br></br>\n                <input type=\"submit\" value=\"Edit Pet\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Edit;","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Router, navigate} from '@reach/router'\n\nimport Create from \"./Create\"\nimport List from \"./List\"\nimport Display from \"./Display\"\nimport Edit from \"./Edit\"\n\nconst Main = () => {\n\n    const[list, setList] = useState([])\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8003/pets\")\n            .then((res) => {\n                console.log(res);\n                setList(res.data.pets)\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n    }, []);\n\n    const addPet = (pet) => {\n        setList([...list, pet])\n    }\n\n    const updatePet = (addedPet) => {\n        setList(list.map(pet => {\n            if(pet._id === addedPet._id){\n                return addedPet\n            } \n            else{\n                return pet\n            }\n        }));\n    }\n\n    const adoptPet = (id) => {\n        const newList = list.filter(pet => pet._id !== id);\n        setList(newList)\n    }\n\n    const adoptHandle = (id) => {\n        axios.delete(`http://localhost:8003/pets/delete/${id}`)\n            .then(res => {\n                console.log(res);\n                adoptPet(id);\n                navigate(\"/\")\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    return(\n        <div>\n            <Router>\n                <List list={list} path=\"/\" />\n                <Create addPet={addPet} path=\"/pets/new\" />\n                <Display adoptHandle={adoptHandle} path=\"/pets/:id\" updatePet={updatePet}/>\n                <Edit path=\"/pets/:id/edit\" updatePet={updatePet} list={list}/>\n            </Router>\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\n\nimport Main from \"./components/Main\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}